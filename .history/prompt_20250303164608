 你是一个资深的人工智能和计算机视觉专家，请根据以下需求，为我编写一段完整的实现方案或示例代码（最好使用 Python）来完成如下任务：

项目目标：

我有一张包含多辆汽车的停车场照片，需要先使用我已经训练好的 YOLO 关键点检测模型来检测所有车辆。
我训练的这个 YOLO 模型可以输出每辆车的边界框以及车辆“前端关键点”和“后端关键点”的坐标。
基于这些检测结果，以及相机的标定数据 camera_calibration.npz，我要在三维空间中以“3D 白模型”的形式呈现出每辆车，并且需要正确地确定每辆车在 3D 空间中的位置、朝向和大小。
在 3D 模型的坐标系中，车头对应 y 轴的负方向，车辆的左侧对应 x 轴的正方向。
需要结合相机标定数据，防止出现畸变或比例不准确的问题。
数据说明：

输入是一张停车场照片（如附件所示，或从指定路径读取）。
我已经有一个 YOLO 关键点检测模型，它能输出：
每辆车的检测框（bounding box）。
车辆前端关键点坐标。
车辆后端关键点坐标。
相机标定数据存储在 camera_calibration.npz 中，包含相机内参和畸变系数等信息。
3D 白模型：可以理解为一辆统一尺度的简化 3D 车身模型，模型在D:\Desktop\yitaixx\3D_whiteModel\3Dmodel\car.obj，但要能根据车辆大小和方向进行缩放和旋转。
具体需求：

车辆检测与关键点提取：
从图片中读取所有车辆的边界框以及前后端关键点坐标。
如果你需要示例数据，可先用伪数据或假设数据模拟。
相机标定和坐标变换：
使用 camera_calibration.npz 中的相机内参、外参，以及畸变参数（如果有）来进行图像到世界坐标系的转换。
需要计算每辆车在世界坐标系下的三维位置和朝向（可考虑假设地面平面为 Z=0，或自行定义适当的坐标系）。
估计车辆大小与朝向：
根据检测框以及前端、后端关键点的图像坐标，结合相机标定，估计车辆在现实世界中的长度、宽度等尺寸。
通过前后端关键点确定车辆的朝向向量，然后在 3D 空间中进行相应的旋转变换，使车辆的 3D 白模型“车头”对应 y 轴负方向，“车辆左侧”对应 x 轴正方向。
构建或加载 3D 白模型并进行变换：
你可以选用任意合适的 3D 库（例如 Open3D、pybullet、pyrender、PyOpenGL、Blender Python API 等）或直接输出可视化结果。
对 3D 白模型做平移、缩放和旋转，保证它与实际车辆的三维坐标和朝向一致。
如果可能，最终输出（或渲染）一个包含所有车辆 3D 白模型的场景视图，或者输出对应的三维坐标和姿态参数。
可视化和结果输出：
将最终的 3D 场景进行渲染或输出，能直观地看到每辆车在停车场中的三维位置与姿态。
若暂不实现可视化，可先打印每辆车在世界坐标系下的 (x, y, z) 位置，以及 3D 白模型的旋转角度（如欧拉角或四元数）和缩放系数等信息。
实现细节：

请提供一段尽量完整、可执行的 Python 示例代码或详细的步骤说明，包含关键的函数、数据结构、库依赖等。
代码中需要包含注释或文档字符串，解释每个步骤的原理和作用。
如果实现可视化，请说明所使用的可视化库、坐标系定义，以及如何渲染。
如果需要简化，也可以先用虚拟数据测试流程，再对接真实的 YOLO 检测结果。
输出格式：

最好能给出整段可直接运行的 Python 代码示例；如有需要，可在代码后附加文字说明。
如果篇幅过长，可以分段给出实现，但请保证整体思路完整且连贯。
其他补充：

如果在实现中需要做任何合理假设（例如地平面高度、车辆平均高度等），请在注释中注明。
如果有额外的优化建议（例如多车辆的并行处理、场景大规模扩展、可视化增强），可以在答案的最后给出。